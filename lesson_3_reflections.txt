When would you want to use a remote repository rather than keeping all your work local?
  #Backing up work and/or when contributing with other(s)
Why might you want to always pull changes manually rather than having Git automatically stay up-to-date with your remote repository?
	#I might be working on something which could be overwritten by an automatic pull.
Describe the differences between forks, clones, and branches. When would you use one instead of another?
	#Forking is cloning in the cloud. It's one way by default.
	#cloning is making a copy of an existing repository. If both the source and destination is on github(or elsewhere in a cloud), we refer to it as forking.
	#branches are labels attached to a set of commits.
What is the benefit of having a copy of the last known state of the remote stored locally?
	#it's easy to merge with the online repository after making changes to the code if it didn't change online. 
	#if there was a change online, which haven't been synced to the local repository, than there will be unsynced changes compared to each other. For this, there is a the origin/xy branch locally, which contains the latest synced version. having these three, will make the merge relatively easier.
How would you collaborate without using Git or GitHub? What would be easier, and what would be harder?
	#keeping four areas up to date and syncing them looks difficult compared to the complexity of the code we are dealing with. However in more complex projects, with more collaborators, syncing work, tasks, then mergeing would probably be way more work than taking car of a git/github project.
